main = roo::main;
library from "rootKt" as roo {

  class Foo extends core::Object {
    field core::String x_field;
    constructor •(final core::String x) → roo::Foo
      : super core::Object::•() {
      {
        this.{roo::Foo::x_field} = x;
      }
    }
    get x() → core::String {
      return this.{roo::Foo::x_field};
    }
    method toString() → core::String {
      return "Foo(${this.{roo::Foo::x}})";
    }
  }
  class Bar extends core::Object {
    field roo::Foo this$outer_field;
    constructor •(final roo::Foo $outer) → roo::Bar
      : roo::Bar::this$outer_field = $outer, super core::Object::•() {
      {}
    }
    method toString() → core::String {
      return "${this.{roo::Bar::this$outer_field}}.Bar";
    }
  }
  static method main() → void {
    final roo::Foo foo = new roo::Foo::•("hi");
    final roo::Bar bar = new roo::Bar::•(foo);
    core::print(bar);
  }
}
